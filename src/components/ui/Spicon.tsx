'use client';

import React, { useState } from "react";
import { motion } from "framer-motion";

const pathsData = [
    {
        d: "M117.256352,62.5 L81.8250437,95.3726207 L16.9090461,95.5 L59.9059682,62.5979119 L117.256352,62.5 Z",
        id: 's1',
        stroke: '#34B8BA',
    },
    {
        d: "M68.6654525,1.82831942 L117.163485,64.0175497 L83.224019,95.003145 L68.6654525,1.82831942 Z",
        id: 's2',
        stroke: '#34B8BA',
    },
    {
        d: "M67.6052629,1.52076007 L82.2895192,95.5 L15.7208909,95.5 L67.6052629,1.52076007 Z",
        id: 's3',
        stroke: '#34B8BA',
    },
    {
        d: "M66.0883005,2.49978409 L59.4009594,61.7305194 L16.4109096,94.2118904 L66.0883005,2.49978409 Z",
        id: 'Triangle',
        stroke: '#34B8BA',
    },
    {
        d: "M108.459628,63.1784876 C111.454369,63.2247499 113.8057,63.4331711 115.410636,63.6943116 C115.972197,63.7856837 116.43844,63.8820233 116.796349,63.9867193 C116.616137,67.1741537 104.054678,94.4934072 90.9374702,122.488175 L89.2338508,126.11961 C89.0825953,126.441631 88.9313086,126.763613 88.7800071,127.085521 L87.872152,129.015784 C80.6099991,144.446157 73.3896289,159.540158 68.0318671,170.356469 C65.5430691,175.380883 63.4567203,179.481285 61.9555644,182.261656 C61.5464853,183.019333 61.1813232,183.678244 60.8637262,184.230175 L60.854,184.246 L60.9000947,184.101752 C61.0703188,183.568606 61.2745212,182.95668 61.5104538,182.271034 L61.6310539,181.92209 C61.9119588,181.112727 62.2333801,180.209503 62.5921582,179.219821 L62.9087571,178.350521 C63.994091,175.383427 65.3770089,171.727817 66.9838177,167.556352 C71.9993824,154.535355 79.1946836,136.493316 86.334704,118.671729 L87.2267569,116.445558 C88.712493,112.738451 90.1917878,109.05039 91.6444319,105.428772 C98.5990718,88.090009 104.942992,72.2737832 108.459628,63.1784876 Z M107.100918,55.0520636 C108.287083,54.9915307 109.229251,54.9898271 109.864062,55.0645828 C109.991433,55.079582 110.104231,55.096446 110.201052,55.1173109 C110.213829,55.9553306 109.285913,58.245067 107.948236,61.7251103 C99.0713328,61.5515313 87.0540993,61.4346788 77.1864633,61.4249634 L74.349687,61.424988 C70.6051345,61.4286495 67.2927164,61.4459226 64.7782031,61.4629732 L64.601,61.464 L64.6661552,61.451233 C67.3337824,60.9384572 70.9285782,60.2804607 74.941931,59.5815604 L75.5470095,59.4764316 C82.0169825,58.3548939 89.488303,57.1424378 95.8934007,56.2633067 C100.400161,55.6447318 104.377458,55.1910483 107.100918,55.0520636 Z",
        id: "s4",
        stroke: '#850D0D',
    },
    {
        d: "M59.8737109,62.5 C60.9101633,62.5 65.8141569,69.6962519 70.6542382,77.1600469 L71.281635,78.1314257 C71.3608035,78.2544903 71.4399248,78.3776429 71.5189814,78.5008569 L71.9924079,79.2406677 C76.873617,86.8886428 81.3737109,94.5701934 81.3737109,96 C81.3737109,97.8417111 74.0724955,130.783559 67.855978,156.361254 C65.6986763,165.237414 63.6704708,173.227774 62.1197879,178.72853 C61.4318898,181.168719 60.8387866,183.116716 60.3705146,184.43092 C60.182985,184.957221 60.0170815,185.378625 59.8733749,185.68467 C59.3526584,185.832726 58.450856,183.751102 58.450856,183.751102 C57.3699312,181.907687 55.9747273,179.387831 54.3180309,176.286145 C50.5168028,169.169441 45.3431891,158.996626 40.0079692,148.264723 C39.2946699,146.829907 38.5782833,145.385062 37.8617475,143.936199 L37.145271,142.48622 L36.429348,141.034898 C35.4754433,139.099502 34.5247561,137.16409 33.5842515,135.242912 L32.8808911,133.80492 C23.5311109,114.673219 15.3737109,97.3212469 15.3737109,96 C15.3737109,94.712633 23.3883701,88.3925059 32.373453,81.6037766 C34.4199196,80.0575574 36.5293685,78.4849535 38.6273587,76.9396216 L39.3672289,76.3954301 C39.8599968,76.0335072 40.3516455,75.6734436 40.8412053,75.3159383 L41.573857,74.7816866 C50.7093887,68.1297077 58.9400626,62.5 59.8737109,62.5 Z",
        id: "s5",
        stroke: '#E81A1A',
    },
    {
        d: "M101.404601,80.1410094 C97.8148645,86.0589101 88.9850137,108.565124 80.3377713,131.360163 L79.6075743,133.286828 C76.3247349,141.956633 73.0903935,150.601809 70.2027678,158.325978 C66.6831047,167.740798 63.6772912,175.781169 61.7260258,180.813165 C61.2407527,182.064605 60.8209932,183.129318 60.4750635,183.981961 L60.448,184.046 L60.3066143,89.1981422 C78.1043419,85.5488281 95.260757,81.7391229 101.201917,80.1939871 Z M59.3067497,62.951944 L59.3060118,88.3822169 C46.9286589,90.909815 34.7537281,93.2518787 26.2556833,94.6102145 C22.6484451,95.186799 19.7064402,95.5859799 17.7140647,95.7417508 C16.8094428,95.8124773 16.1071638,95.8336037 15.6358255,95.7942788 C16.7754458,92.9401035 31.6256961,82.038645 59.3067497,62.951944 Z",
        id: "s6",
        stroke: '#1BE733',
    }
]

const Spicon = () => {
    const [isHovered, setIsHovered] = useState(false);

    const pathVariants = {
        initial: {
            pathLength: 0,
            opacity: 0,
        },
        animate: (i: number) => ({
            pathLength: 1,
            opacity: 1,
            transition: {
                duration: 1.5,
                ease: 'easeInOut',
                delay: i * 0.3,
            }
        }),
    };

    const textVariants = {
        initial: {
            opacity: 0.2,
            scale: 1,
        },
        animate: (delay: number) => ({
            opacity: 1,
            scale: 1.1,
            transition: {
                opacity: {
                    duration: 1, delay
                },
                scale: {
                    duration: 0.5, delay: delay + 1,
                },
            }
        }),
    };

    return (
        <motion.svg
            id='spicon'
            width="128.873711px"
            height="186.579878px"
            viewBox="0 0 128.873711 186.579878"
            onMouseEnter={() => setIsHovered(true)}
            onMouseLeave={() => setIsHovered(false)}
            onBlur={() => setIsHovered(false)}
            onFocus={() => setIsHovered(true)}
            tabIndex={0}
        >
            <title>sfw</title>
            <g id="Base" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
                <g id="192x192" transform="translate(-14.1263, 0)">
                    <g id="Group" transform="translate(14.1263, 0)">
                        {pathsData.map((path, index) => (
                            <motion.path
                                key={index}
                                d={path.d}
                                stroke={path.stroke}
                                fill="none"
                                variants={pathVariants}
                                initial="initial"
                                animate={isHovered ? 'animate' : 'initial'}
                                custom={index}
                            />
                        ))}
                        <motion.text id="t1" transform="translate(41.1259, 48.5156) rotate(-35) translate(-41.1259, -48.5156)" fontFamily="PixelifySans-Regular_Bold, Pixelify Sans" fontSize="17" fontWeight="bold" fill="#e1e1e1" variants={textVariants}
                            initial="initial"
                            animate={isHovered ? 'animate' : 'initial'}
                            custom={1}>
                            <tspan x="9.12585276" y="39.5156399">spoon</tspan>
                        </motion.text>
                        <motion.text id="t2" fontFamily="PixelifySans-Regular_Bold, Pixelify Sans" fontSize="18" fontWeight="bold" fill="#e1e1e1" variants={textVariants}
                            initial="initial"
                            animate={isHovered ? 'animate' : 'initial'}
                            custom={4}>
                            <tspan x="92.8737109" y="135">web</tspan>
                        </motion.text>
                        <motion.text id="t3" transform="translate(36.8067, 120.1689) rotate(62) translate(-36.8067, -120.1689)" fontFamily="PixelifySans-Regular_Medium, Pixelify Sans" fontSize="16" fontWeight="400" fill="#e1e1e1" variants={textVariants}
                            initial="initial"
                            animate={isHovered ? 'animate' : 'initial'}
                            custom={2.5}>
                            <tspan x="23.3067196" y="125.668942">fed</tspan>
                        </motion.text>
                    </g>
                </g>
            </g>
        </motion.svg>
    )
}

export default Spicon;